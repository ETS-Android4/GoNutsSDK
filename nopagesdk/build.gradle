apply plugin: 'com.android.library'
//apply plugin: 'org.greenrobot.greendao'

def static getProductName() {
    return "sdk"
}

// 发布时间
static def releaseTime() {
    return new Date().format("yyyyMMdd", TimeZone.getTimeZone("UTC"))
}

android {
    compileSdkVersion 30
    buildToolsVersion '30.0.2'


    defaultConfig {
        minSdkVersion 16
        targetSdkVersion 30
        versionCode 39
        versionName "2.7"
        multiDexEnabled true
        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
        debug {
            minifyEnabled false
        }
    }
    android.libraryVariants.all { variant ->
        variant.outputs.all {
            outputFileName = getProductName() + "_v${defaultConfig.versionName}" + '.aar'
        }
    }
}

dependencies {
    implementation fileTree(include: ['*.jar'], dir: 'libs')
    implementation 'androidx.appcompat:appcompat:1.2.0'
    implementation 'androidx.constraintlayout:constraintlayout:2.0.1'
    testImplementation 'junit:junit:4.12'
    androidTestImplementation 'androidx.test:runner:1.3.0'
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.3.0'
    //Google内购
    implementation 'com.android.billingclient:billing:4.0.0'//2.0.3//2.2.1//3.0.3
    //Gson
    implementation 'com.google.code.gson:gson:2.8.6'
    // greenDao
//    implementation 'org.greenrobot:greendao:3.3.0'//3.2.2
//    implementation 'net.zetetic:android-database-sqlcipher:3.5.7@aar'




    //二维码（暂时用不到）
    implementation 'com.google.zxing:core:3.3.3'
    implementation 'cn.bingoogolapple:bga-qrcodecore:1.1.7@aar'
    implementation 'cn.bingoogolapple:bga-zxing:1.1.7@aar'
    //Facebook登录
    //google登录
    implementation 'com.google.android.gms:play-services-auth:18.0.0'
    //Google评价用到核心库
    implementation 'com.google.android.play:core:1.9.0'

    // Facebook Android SDK (everything)
    api 'com.facebook.android:facebook-android-sdk:11.1.1'//7.1.0
//    implementation 'com.facebook.android:facebook-android-sdk:5.13.0'
    //AIHelp
//    implementation 'net.aihelp:elva:1.7.4.0'
    api 'net.aihelp:android-aihelp-aar:2.4.+'
    //Firebase
    api 'com.google.firebase:firebase-analytics:17.6.0'
    api 'com.google.firebase:firebase-messaging:20.3.0'

    // Add the Firebase Crashlytics SDK.
    implementation 'com.google.firebase:firebase-crashlytics-ndk:17.1.1'
    //Bugly
    implementation 'com.tencent.bugly:crashreport:3.3.1'
    implementation 'com.tencent.bugly:nativecrashreport:3.7.500'

    //    adjust
    api 'com.adjust.sdk:adjust-android:4.28.1'
    api 'com.android.installreferrer:installreferrer:2.2'
    api 'com.google.android.gms:play-services-ads-identifier:17.0.0'

    //分包
    api 'androidx.multidex:multidex:2.0.1'
}

//greendao {
//    schemaVersion 2 //数据库版本号
//    daoPackage 'com.nutsplay.nopagesdk.db'// 设置DaoMaster、DaoSession、Dao 包名
//    targetGenDir 'src/main/java'//设置DaoMaster、DaoSession、Dao目录
//}


//生成sdk的jar包
def SDK_BASENAME = "sdk"
def SDK_VERSION = "_v1.0"
def sdkDestinationPath = "build/outputs/jar/"
task deleteBuild(type: Delete) {
    delete sdkDestinationPath + SDK_BASENAME + SDK_VERSION + ".jar"
}
task makeJar(type: Jar) {
    archivesBaseName = SDK_BASENAME + SDK_VERSION
    from(project.zipTree('build/intermediates/packaged-classes/release/classes.jar'))
    destinationDir = file(sdkDestinationPath)
}
makeJar.dependsOn(deleteBuild, build)
