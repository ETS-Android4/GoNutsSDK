apply plugin: 'com.android.library'
apply plugin: 'org.greenrobot.greendao'

def static getProductName() {
    return "sdk"
}

android {
    compileSdkVersion 29
    buildToolsVersion "29.0.0"


    defaultConfig {
        minSdkVersion 15
        targetSdkVersion 29
        versionCode 2
        versionName "1.1"

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"

    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
        debug {
            minifyEnabled false
        }
    }
    android.libraryVariants.all { variant ->
        variant.outputs.all {
            outputFileName = getProductName() + "_v${defaultConfig.versionName}"+'.aar'
        }
    }
}

dependencies {
    implementation fileTree(include: ['*.jar'], dir: 'libs')
    implementation 'androidx.appcompat:appcompat:1.1.0'
    testImplementation 'junit:junit:4.12'
    androidTestImplementation 'androidx.test:runner:1.2.0'
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.2.0'
    implementation files('libs/af-android-sdk.jar')
    implementation files('libs/bugly_crash_release.jar')
    implementation files('libs/commonlib.jar')
    implementation files('libs/google-services-installreferrer.jar')
    implementation files('libs/gson-2.8.5.jar')
    implementation files('libs/xhttp.jar')





    //Google内购
    implementation 'com.android.billingclient:billing:2.0.3'
    // greenDao
    implementation 'org.greenrobot:greendao:3.2.2'
    implementation 'net.zetetic:android-database-sqlcipher:3.5.7@aar'
    //二维码
    implementation 'com.google.zxing:core:3.3.3'
    implementation 'cn.bingoogolapple:bga-qrcodecore:1.1.7@aar'
    implementation 'cn.bingoogolapple:bga-zxing:1.1.7@aar'
}

greendao {
    schemaVersion 2 //数据库版本号
    daoPackage 'com.nutsplay.nopagesdk.db'// 设置DaoMaster、DaoSession、Dao 包名
    targetGenDir 'src/main/java'//设置DaoMaster、DaoSession、Dao目录
}


//生成sdk的jar包
def SDK_BASENAME = "sdk"
def SDK_VERSION = "_v1.0"
def sdkDestinationPath = "build/outputs/jar/"
task deleteBuild(type: Delete) {
    delete sdkDestinationPath + SDK_BASENAME + SDK_VERSION + ".jar"
}
task makeJar(type: Jar) {
    archivesBaseName = SDK_BASENAME + SDK_VERSION
    from(project.zipTree('build/intermediates/packaged-classes/release/classes.jar'))
    destinationDir = file(sdkDestinationPath)
}
makeJar.dependsOn(deleteBuild, build)